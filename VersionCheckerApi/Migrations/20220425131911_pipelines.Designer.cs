// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VersionCheckerApi.Persistence;

#nullable disable

namespace VersionCheckerApi.Migrations
{
    [DbContext(typeof(ProjectContext))]
    [Migration("20220425131911_pipelines")]
    partial class pipelines
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ModulePackage", b =>
                {
                    b.Property<int>("ModulesModuleId")
                        .HasColumnType("int");

                    b.Property<string>("PackagesName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PackagesVersion")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("PackagesType")
                        .HasColumnType("int");

                    b.HasKey("ModulesModuleId", "PackagesName", "PackagesVersion", "PackagesType");

                    b.HasIndex("PackagesName", "PackagesVersion", "PackagesType");

                    b.ToTable("ModulePackage");
                });

            modelBuilder.Entity("VersionCheckerApi.Persistence.Models.Actionable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Problem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("Severity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Actionables");
                });

            modelBuilder.Entity("VersionCheckerApi.Persistence.Models.Module", b =>
                {
                    b.Property<int>("ModuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ModuleId"), 1L, 1);

                    b.Property<int>("BiggestDiscrepancyLevel")
                        .HasColumnType("int");

                    b.Property<string>("FullPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HighestVulnerabilitySeverity")
                        .HasColumnType("int");

                    b.Property<string>("ImportantTag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ModuleType")
                        .HasColumnType("int");

                    b.Property<string>("ModuleVersion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("ModuleId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Modules");
                });

            modelBuilder.Entity("VersionCheckerApi.Persistence.Models.Package", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnOrder(0);

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnOrder(1);

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.Property<int>("DiscrepancyLevel")
                        .HasColumnType("int");

                    b.Property<string>("ImportantTag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LatestVersion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VulnerabilitySeverity")
                        .HasColumnType("int");

                    b.Property<string>("VulnerabilityUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Name", "Version", "Type");

                    b.ToTable("Packages");
                });

            modelBuilder.Entity("VersionCheckerApi.Persistence.Models.Pipeline", b =>
                {
                    b.Property<int>("PipelineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PipelineId"), 1L, 1);

                    b.Property<string>("Agent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("projectId")
                        .HasColumnType("int");

                    b.HasKey("PipelineId");

                    b.HasIndex("projectId")
                        .IsUnique();

                    b.ToTable("Pipelines");
                });

            modelBuilder.Entity("VersionCheckerApi.Persistence.Models.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectId"), 1L, 1);

                    b.Property<int>("BiggestDiscrepancyLevel")
                        .HasColumnType("int");

                    b.Property<string>("Branch")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HighestVulnerabilitySeverity")
                        .HasColumnType("int");

                    b.Property<string>("ImportantTag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProjectReferenceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RepositoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("WebhookId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ProjectId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("ModulePackage", b =>
                {
                    b.HasOne("VersionCheckerApi.Persistence.Models.Module", null)
                        .WithMany()
                        .HasForeignKey("ModulesModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VersionCheckerApi.Persistence.Models.Package", null)
                        .WithMany()
                        .HasForeignKey("PackagesName", "PackagesVersion", "PackagesType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VersionCheckerApi.Persistence.Models.Actionable", b =>
                {
                    b.HasOne("VersionCheckerApi.Persistence.Models.Project", "Project")
                        .WithMany("Actionables")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("VersionCheckerApi.Persistence.Models.Module", b =>
                {
                    b.HasOne("VersionCheckerApi.Persistence.Models.Project", "Project")
                        .WithMany("Modules")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("VersionCheckerApi.Persistence.Models.Pipeline", b =>
                {
                    b.HasOne("VersionCheckerApi.Persistence.Models.Project", null)
                        .WithOne("Pipeline")
                        .HasForeignKey("VersionCheckerApi.Persistence.Models.Pipeline", "projectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VersionCheckerApi.Persistence.Models.Project", b =>
                {
                    b.Navigation("Actionables");

                    b.Navigation("Modules");

                    b.Navigation("Pipeline");
                });
#pragma warning restore 612, 618
        }
    }
}
